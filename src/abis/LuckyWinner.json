{
  "contractName": "LuckyWinner",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "enrollFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "enrolledUsers",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "userAddress",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "enrolled",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "email",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "phone",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalEnrolleFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "users",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "userAddress",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "enrolled",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "email",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "phone",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "winnerAddress",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address payable",
              "name": "userAddress",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "enrolled",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "email",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "phone",
              "type": "string"
            }
          ],
          "internalType": "struct LuckyWinner.User",
          "name": "user",
          "type": "tuple"
        }
      ],
      "name": "enrollUser",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address payable",
              "name": "userAddress",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "enrolled",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "email",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "phone",
              "type": "string"
            }
          ],
          "internalType": "struct LuckyWinner.User[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "getEnrolledData",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address payable",
              "name": "userAddress",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "enrolled",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "email",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "phone",
              "type": "string"
            }
          ],
          "internalType": "struct LuckyWinner.User[]",
          "name": "",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "announceRandomWinner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"announceRandomWinner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"enrollFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address payable\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"enrolled\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"phone\",\"type\":\"string\"}],\"internalType\":\"struct LuckyWinner.User\",\"name\":\"user\",\"type\":\"tuple\"}],\"name\":\"enrollUser\",\"outputs\":[{\"components\":[{\"internalType\":\"address payable\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"enrolled\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"phone\",\"type\":\"string\"}],\"internalType\":\"struct LuckyWinner.User[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"enrolledUsers\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"enrolled\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"phone\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getEnrolledData\",\"outputs\":[{\"components\":[{\"internalType\":\"address payable\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"enrolled\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"phone\",\"type\":\"string\"}],\"internalType\":\"struct LuckyWinner.User[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalEnrolleFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"enrolled\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"phone\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"winnerAddress\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/deepak/Desktop/Code/ai/lucky-winner/src/contracts/LuckyWinner.sol\":\"LuckyWinner\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/deepak/Desktop/Code/ai/lucky-winner/src/contracts/LuckyWinner.sol\":{\"keccak256\":\"0x28a314e256b750f27c8221e659cc4d3769951d9d2165c6723d5a8a174d20a156\",\"urls\":[\"bzz-raw://5001406c91359f24d1325b1912696329139f54afe434b79dc8162976c6c0ff95\",\"dweb:/ipfs/QmNT2VmRY9k6VBNbao1EXqP5xLzQ9s9ijHcDsCW31zwd7n\"]}},\"version\":1}",
  "bytecode": "0x60806040526000600355670de0b6b3a764000060055534801561002157600080fd5b5061180a806100316000396000f3fe6080604052600436106100865760003560e01c806370a082311161005957806370a0823114610154578063823f925014610191578063dae87955146101d2578063ed7a4e0b146101ff578063ff9d3ab61461022a57610086565b8063200bb50d1461008b578063365b98b2146100b65780636477a230146100f75780636e67f8dd14610127575b600080fd5b34801561009757600080fd5b506100a0610255565b6040516100ad91906115e4565b60405180910390f35b3480156100c257600080fd5b506100dd60048036036100d891908101906112c8565b61025b565b6040516100ee9594939291906114e5565b60405180910390f35b610111600480360361010c9190810190611287565b610493565b60405161011e9190611584565b60405180910390f35b34801561013357600080fd5b5061013c6109f0565b60405161014b939291906115a6565b60405180910390f35b34801561016057600080fd5b5061017b6004803603610176919081019061125e565b610cb8565b60405161018891906115e4565b60405180910390f35b34801561019d57600080fd5b506101b860048036036101b3919081019061125e565b610cd0565b6040516101c99594939291906114e5565b60405180910390f35b3480156101de57600080fd5b506101e7610efb565b6040516101f69392919061154d565b60405180910390f35b34801561020b57600080fd5b50610214611015565b60405161022191906114ca565b60405180910390f35b34801561023657600080fd5b5061023f61103b565b60405161024c91906115e4565b60405180910390f35b60035481565b6002818154811061026857fe5b90600052602060002090600402016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900460ff1690806001018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561034d5780601f106103225761010080835404028352916020019161034d565b820191906000526020600020905b81548152906001019060200180831161033057829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103eb5780601f106103c0576101008083540402835291602001916103eb565b820191906000526020600020905b8154815290600101906020018083116103ce57829003601f168201915b505050505090806003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104895780601f1061045e57610100808354040283529160200191610489565b820191906000526020600020905b81548152906001019060200180831161046c57829003601f168201915b5050505050905085565b606060055434146104a357600080fd5b60055460036000828254019250508190555060026040518060a001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001600115158152602001846040015181526020018460600151815260200184608001518152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff02191690831515021790555060408201518160010190805190602001906105b1929190611041565b5060608201518160020190805190602001906105ce929190611041565b5060808201518160030190805190602001906105eb929190611041565b505050506040518060a001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001600115158152602001836040015181526020018360600151815260200183608001518152506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff02191690831515021790555060408201518160010190805190602001906106fc929190611041565b506060820151816002019080519060200190610719929190611041565b506080820151816003019080519060200190610736929190611041565b509050506002805480602002602001604051908101604052809291908181526020016000905b828210156109e557838290600052602060002090600402016040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460ff16151515158152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108895780601f1061085e57610100808354040283529160200191610889565b820191906000526020600020905b81548152906001019060200180831161086c57829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561092b5780601f106109005761010080835404028352916020019161092b565b820191906000526020600020905b81548152906001019060200180831161090e57829003601f168201915b50505050508152602001600382018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109cd5780601f106109a2576101008083540402835291602001916109cd565b820191906000526020600020905b8154815290600101906020018083116109b057829003601f168201915b5050505050815250508152602001906001019061075c565b505050509050919050565b6060600080600260035460045482805480602002602001604051908101604052809291908181526020016000905b82821015610ca757838290600052602060002090600402016040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460ff16151515158152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b4b5780601f10610b2057610100808354040283529160200191610b4b565b820191906000526020600020905b815481529060010190602001808311610b2e57829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610bed5780601f10610bc257610100808354040283529160200191610bed565b820191906000526020600020905b815481529060010190602001808311610bd057829003601f168201915b50505050508152602001600382018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c8f5780601f10610c6457610100808354040283529160200191610c8f565b820191906000526020600020905b815481529060010190602001808311610c7257829003601f168201915b50505050508152505081526020019060010190610a1e565b505050509250925092509250909192565b60016020528060005260406000206000915090505481565b60006020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900460ff1690806001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610db55780601f10610d8a57610100808354040283529160200191610db5565b820191906000526020600020905b815481529060010190602001808311610d9857829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e535780601f10610e2857610100808354040283529160200191610e53565b820191906000526020600020905b815481529060010190602001808311610e3657829003601f168201915b505050505090806003018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ef15780601f10610ec657610100808354040283529160200191610ef1565b820191906000526020600020905b815481529060010190602001808311610ed457829003601f168201915b5050505050905085565b6000806000806000905060028181548110610f1257fe5b906000526020600020906004020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060004790506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610ff6573d6000803e3d6000fd5b5060006003819055508060035483829250955095509550505050909192565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061108257805160ff19168380011785556110b0565b828001600101855582156110b0579182015b828111156110af578251825591602001919060010190611094565b5b5090506110bd91906110c1565b5090565b6110e391905b808211156110df5760008160009055506001016110c7565b5090565b90565b6000813590506110f58161176b565b92915050565b60008135905061110a81611782565b92915050565b60008135905061111f81611799565b92915050565b600082601f83011261113657600080fd5b81356111496111448261162c565b6115ff565b9150808252602083016020830185838301111561116557600080fd5b611170838284611718565b50505092915050565b600060a0828403121561118b57600080fd5b61119560a06115ff565b905060006111a5848285016110fb565b60008301525060206111b984828501611110565b602083015250604082013567ffffffffffffffff8111156111d957600080fd5b6111e584828501611125565b604083015250606082013567ffffffffffffffff81111561120557600080fd5b61121184828501611125565b606083015250608082013567ffffffffffffffff81111561123157600080fd5b61123d84828501611125565b60808301525092915050565b600081359050611258816117b0565b92915050565b60006020828403121561127057600080fd5b600061127e848285016110e6565b91505092915050565b60006020828403121561129957600080fd5b600082013567ffffffffffffffff8111156112b357600080fd5b6112bf84828501611179565b91505092915050565b6000602082840312156112da57600080fd5b60006112e884828501611249565b91505092915050565b60006112fd8383611437565b905092915050565b61130e816116d0565b82525050565b61131d816116d0565b82525050565b61132c816116be565b82525050565b600061133d82611668565b611347818561168b565b93508360208202850161135985611658565b8060005b85811015611395578484038952815161137685826112f1565b94506113818361167e565b925060208a0199505060018101905061135d565b50829750879550505050505092915050565b6113b0816116e2565b82525050565b6113bf816116e2565b82525050565b60006113d082611673565b6113da818561169c565b93506113ea818560208601611727565b6113f38161175a565b840191505092915050565b600061140982611673565b61141381856116ad565b9350611423818560208601611727565b61142c8161175a565b840191505092915050565b600060a08301600083015161144f6000860182611305565b50602083015161146260208601826113a7565b506040830151848203604086015261147a82826113c5565b9150506060830151848203606086015261149482826113c5565b915050608083015184820360808601526114ae82826113c5565b9150508091505092915050565b6114c48161170e565b82525050565b60006020820190506114df6000830184611314565b92915050565b600060a0820190506114fa6000830188611314565b61150760208301876113b6565b818103604083015261151981866113fe565b9050818103606083015261152d81856113fe565b9050818103608083015261154181846113fe565b90509695505050505050565b60006060820190506115626000830186611323565b61156f60208301856114bb565b61157c60408301846114bb565b949350505050565b6000602082019050818103600083015261159e8184611332565b905092915050565b600060608201905081810360008301526115c08186611332565b90506115cf60208301856114bb565b6115dc60408301846114bb565b949350505050565b60006020820190506115f960008301846114bb565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561162257600080fd5b8060405250919050565b600067ffffffffffffffff82111561164357600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006116c9826116ee565b9050919050565b60006116db826116ee565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561174557808201518184015260208101905061172a565b83811115611754576000848401525b50505050565b6000601f19601f8301169050919050565b611774816116be565b811461177f57600080fd5b50565b61178b816116d0565b811461179657600080fd5b50565b6117a2816116e2565b81146117ad57600080fd5b50565b6117b98161170e565b81146117c457600080fd5b5056fea365627a7a72315820bc9c1f32f43141fa8d5b91ac76644421832e82ac6008a3165d031d6c8f7317d56c6578706572696d656e74616cf564736f6c63430005100040",
  "deployedBytecode": "",
  "sourceMap": "68:2556:0:-;;;255:1;221:35;;313:7;286:34;;68:2556;8:9:-1;5:2;;;30:1;27;20:12;5:2;68:2556:0;;;;;;;",
  "deployedSourceMap": "68:2556:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;221:35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;221:35:0;;;:::i;:::-;;;;;;;;;;;;;;;;196:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;196:19:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;626:794;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1712:203;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1712:203:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;146:44;;8:9:-1;5:2;;;30:1;27;20:12;5:2;146:44:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;95:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;95:45:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;1921:701;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1921:701:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;355:36;;8:9:-1;5:2;;;30:1;27;20:12;5:2;355:36:0;;;:::i;:::-;;;;;;;;;;;;;;;;286:34;;8:9:-1;5:2;;;30:1;27;20:12;5:2;286:34:0;;;:::i;:::-;;;;;;;;;;;;;;;;221:35;;;;:::o;196:19::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;626:794::-;712:13;821:9;;808;:22;800:31;;;;;;861:9;;841:16;;:29;;;;;;;;;;;880:5;904:196;;;;;;;;940:10;904:196;;;;;;1081:4;904:196;;;;;;974:4;:9;;;904:196;;;;1008:4;:10;;;904:196;;;;1043:4;:10;;;904:196;;;880:230;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;880:230:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;1195:196;;;;;;;;1231:10;1195:196;;;;;;1372:4;1195:196;;;;;;1265:4;:9;;;1195:196;;;;1299:4;:10;;;1195:196;;;;1334:4;:10;;;1195:196;;;1167:13;:25;1181:10;1167:25;;;;;;;;;;;;;;;:224;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::ioo;146:44::-;;;;;;;;;;;;;;;;;:::o;95:45::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1921:701::-;1998:7;2019;2040;2072:13;2088:1;2072:17;;2167:5;2173;2167:12;;;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;2151:13;;:40;;;;;;;;;;;;;;;;;;2201:23;2227:21;2201:47;;2259:24;2286:13;;;;;;;;;;;2259:40;;2310:8;:17;;:34;2328:15;2310:34;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2310:34:0;2552:1;2533:16;:20;;;;2571:8;2581:16;;2599:15;2563:52;;;;;;;;;;;;1921:701;;;:::o;355:36::-;;;;;;;;;;;;;:::o;286:34::-;;;;:::o;68:2556::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;142:146;;230:6;217:20;208:29;;242:41;277:5;242:41;;;202:86;;;;;295:124;;372:6;359:20;350:29;;384:30;408:5;384:30;;;344:75;;;;;427:434;;525:3;518:4;510:6;506:17;502:27;492:2;;543:1;540;533:12;492:2;580:6;567:20;602:61;617:45;655:6;617:45;;;602:61;;;593:70;;683:6;676:5;669:21;719:4;711:6;707:17;752:4;745:5;741:16;787:3;778:6;773:3;769:16;766:25;763:2;;;804:1;801;794:12;763:2;814:41;848:6;843:3;838;814:41;;;485:376;;;;;;;;899:1189;;1008:4;996:9;991:3;987:19;983:30;980:2;;;1026:1;1023;1016:12;980:2;1044:20;1059:4;1044:20;;;1035:29;;1121:1;1153:57;1206:3;1197:6;1186:9;1182:22;1153:57;;;1146:4;1139:5;1135:16;1128:83;1074:148;1276:2;1309:46;1351:3;1342:6;1331:9;1327:22;1309:46;;;1302:4;1295:5;1291:16;1284:72;1232:135;1445:2;1434:9;1430:18;1417:32;1469:18;1461:6;1458:30;1455:2;;;1501:1;1498;1491:12;1455:2;1536:55;1587:3;1578:6;1567:9;1563:22;1536:55;;;1529:4;1522:5;1518:16;1511:81;1377:226;1682:2;1671:9;1667:18;1654:32;1706:18;1698:6;1695:30;1692:2;;;1738:1;1735;1728:12;1692:2;1773:55;1824:3;1815:6;1804:9;1800:22;1773:55;;;1766:4;1759:5;1755:16;1748:81;1613:227;1919:3;1908:9;1904:19;1891:33;1944:18;1936:6;1933:30;1930:2;;;1976:1;1973;1966:12;1930:2;2011:55;2062:3;2053:6;2042:9;2038:22;2011:55;;;2004:4;1997:5;1993:16;1986:81;1850:228;974:1114;;;;;2095:130;;2175:6;2162:20;2153:29;;2187:33;2214:5;2187:33;;;2147:78;;;;;2232:241;;2336:2;2324:9;2315:7;2311:23;2307:32;2304:2;;;2352:1;2349;2342:12;2304:2;2387:1;2404:53;2449:7;2440:6;2429:9;2425:22;2404:53;;;2394:63;;2366:97;2298:175;;;;;2480:367;;2604:2;2592:9;2583:7;2579:23;2575:32;2572:2;;;2620:1;2617;2610:12;2572:2;2683:1;2672:9;2668:17;2655:31;2706:18;2698:6;2695:30;2692:2;;;2738:1;2735;2728:12;2692:2;2758:73;2823:7;2814:6;2803:9;2799:22;2758:73;;;2748:83;;2634:203;2566:281;;;;;2854:241;;2958:2;2946:9;2937:7;2933:23;2929:32;2926:2;;;2974:1;2971;2964:12;2926:2;3009:1;3026:53;3071:7;3062:6;3051:9;3047:22;3026:53;;;3016:63;;2988:97;2920:175;;;;;3103:221;;3236:82;3314:3;3306:6;3236:82;;;3222:96;;3215:109;;;;;3332:127;3421:32;3447:5;3421:32;;;3416:3;3409:45;3403:56;;;3466:137;3565:32;3591:5;3565:32;;;3560:3;3553:45;3547:56;;;3610:113;3693:24;3711:5;3693:24;;;3688:3;3681:37;3675:48;;;3793:976;;3970:70;4034:5;3970:70;;;4053:102;4148:6;4143:3;4053:102;;;4046:109;;4178:3;4220:4;4212:6;4208:17;4203:3;4199:27;4247:72;4313:5;4247:72;;;4339:7;4367:1;4352:378;4377:6;4374:1;4371:13;4352:378;;;4439:9;4433:4;4429:20;4424:3;4417:33;4484:6;4478:13;4506:96;4597:4;4582:13;4506:96;;;4498:104;;4619:76;4688:6;4619:76;;;4609:86;;4718:4;4713:3;4709:14;4702:21;;4409:321;4399:1;4396;4392:9;4387:14;;4352:378;;;4356:14;4743:4;4736:11;;4760:3;4753:10;;3949:820;;;;;;;;;;4777:94;4844:21;4859:5;4844:21;;;4839:3;4832:34;4826:45;;;4878:104;4955:21;4970:5;4955:21;;;4950:3;4943:34;4937:45;;;4989:319;;5087:35;5116:5;5087:35;;;5134:61;5188:6;5183:3;5134:61;;;5127:68;;5200:52;5245:6;5240:3;5233:4;5226:5;5222:16;5200:52;;;5273:29;5295:6;5273:29;;;5268:3;5264:39;5257:46;;5067:241;;;;;;5315:339;;5423:35;5452:5;5423:35;;;5470:71;5534:6;5529:3;5470:71;;;5463:78;;5546:52;5591:6;5586:3;5579:4;5572:5;5568:16;5546:52;;;5619:29;5641:6;5619:29;;;5614:3;5610:39;5603:46;;5403:251;;;;;;5718:1172;;5845:4;5840:3;5836:14;5935:4;5928:5;5924:16;5918:23;5947:79;6020:4;6015:3;6011:14;5997:12;5947:79;;;5865:167;6109:4;6102:5;6098:16;6092:23;6121:57;6172:4;6167:3;6163:14;6149:12;6121:57;;;6042:142;6257:4;6250:5;6246:16;6240:23;6309:3;6303:4;6299:14;6292:4;6287:3;6283:14;6276:38;6329:69;6393:4;6379:12;6329:69;;;6321:77;;6194:216;6484:4;6477:5;6473:16;6467:23;6536:3;6530:4;6526:14;6519:4;6514:3;6510:14;6503:38;6556:69;6620:4;6606:12;6556:69;;;6548:77;;6420:217;6711:4;6704:5;6700:16;6694:23;6763:3;6757:4;6753:14;6746:4;6741:3;6737:14;6730:38;6783:69;6847:4;6833:12;6783:69;;;6775:77;;6647:217;6881:4;6874:11;;5818:1072;;;;;;6897:113;6980:24;6998:5;6980:24;;;6975:3;6968:37;6962:48;;;7017:245;;7151:2;7140:9;7136:18;7128:26;;7165:87;7249:1;7238:9;7234:17;7225:6;7165:87;;;7122:140;;;;;7269:919;;7557:3;7546:9;7542:19;7534:27;;7572:87;7656:1;7645:9;7641:17;7632:6;7572:87;;;7670:66;7732:2;7721:9;7717:18;7708:6;7670:66;;;7784:9;7778:4;7774:20;7769:2;7758:9;7754:18;7747:48;7809:74;7878:4;7869:6;7809:74;;;7801:82;;7931:9;7925:4;7921:20;7916:2;7905:9;7901:18;7894:48;7956:74;8025:4;8016:6;7956:74;;;7948:82;;8079:9;8073:4;8069:20;8063:3;8052:9;8048:19;8041:49;8104:74;8173:4;8164:6;8104:74;;;8096:82;;7528:660;;;;;;;;;8195:435;;8369:2;8358:9;8354:18;8346:26;;8383:71;8451:1;8440:9;8436:17;8427:6;8383:71;;;8465:72;8533:2;8522:9;8518:18;8509:6;8465:72;;;8548;8616:2;8605:9;8601:18;8592:6;8548:72;;;8340:290;;;;;;;8637:425;;8837:2;8826:9;8822:18;8814:26;;8887:9;8881:4;8877:20;8873:1;8862:9;8858:17;8851:47;8912:140;9047:4;9038:6;8912:140;;;8904:148;;8808:254;;;;;9069:647;;9325:2;9314:9;9310:18;9302:26;;9375:9;9369:4;9365:20;9361:1;9350:9;9346:17;9339:47;9400:140;9535:4;9526:6;9400:140;;;9392:148;;9551:72;9619:2;9608:9;9604:18;9595:6;9551:72;;;9634;9702:2;9691:9;9687:18;9678:6;9634:72;;;9296:420;;;;;;;9723:213;;9841:2;9830:9;9826:18;9818:26;;9855:71;9923:1;9912:9;9908:17;9899:6;9855:71;;;9812:124;;;;;9943:256;;10005:2;9999:9;9989:19;;10043:4;10035:6;10031:17;10142:6;10130:10;10127:22;10106:18;10094:10;10091:34;10088:62;10085:2;;;10163:1;10160;10153:12;10085:2;10183:10;10179:2;10172:22;9983:216;;;;;10206:318;;10346:18;10338:6;10335:30;10332:2;;;10378:1;10375;10368:12;10332:2;10445:4;10441:9;10434:4;10426:6;10422:17;10418:33;10410:41;;10509:4;10503;10499:15;10491:23;;10269:255;;;;10531:167;;10633:3;10625:11;;10671:4;10666:3;10662:14;10654:22;;10619:79;;;;10705:153;;10830:5;10824:12;10814:22;;10795:63;;;;10865:118;;10955:5;10949:12;10939:22;;10920:63;;;;10990:124;;11104:4;11099:3;11095:14;11087:22;;11081:33;;;;11122:194;;11268:6;11263:3;11256:19;11305:4;11300:3;11296:14;11281:29;;11249:67;;;;;11325:153;;11430:6;11425:3;11418:19;11467:4;11462:3;11458:14;11443:29;;11411:67;;;;;11487:163;;11602:6;11597:3;11590:19;11639:4;11634:3;11630:14;11615:29;;11583:67;;;;;11658:91;;11720:24;11738:5;11720:24;;;11709:35;;11703:46;;;;11756:99;;11826:24;11844:5;11826:24;;;11815:35;;11809:46;;;;11862:85;;11935:5;11928:13;11921:21;11910:32;;11904:43;;;;11954:121;;12027:42;12020:5;12016:54;12005:65;;11999:76;;;;12082:72;;12144:5;12133:16;;12127:27;;;;12162:145;12243:6;12238:3;12233;12220:30;12299:1;12290:6;12285:3;12281:16;12274:27;12213:94;;;;12316:268;12381:1;12388:101;12402:6;12399:1;12396:13;12388:101;;;12478:1;12473:3;12469:11;12463:18;12459:1;12454:3;12450:11;12443:39;12424:2;12421:1;12417:10;12412:15;;12388:101;;;12504:6;12501:1;12498:13;12495:2;;;12569:1;12560:6;12555:3;12551:16;12544:27;12495:2;12365:219;;;;;12592:97;;12680:2;12676:7;12671:2;12664:5;12660:14;12656:28;12646:38;;12640:49;;;;12697:117;12766:24;12784:5;12766:24;;;12759:5;12756:35;12746:2;;12805:1;12802;12795:12;12746:2;12740:74;;12821:133;12898:32;12924:5;12898:32;;;12891:5;12888:43;12878:2;;12945:1;12942;12935:12;12878:2;12872:82;;12961:111;13027:21;13042:5;13027:21;;;13020:5;13017:32;13007:2;;13063:1;13060;13053:12;13007:2;13001:71;;13079:117;13148:24;13166:5;13148:24;;;13141:5;13138:35;13128:2;;13187:1;13184;13177:12;13128:2;13122:74;",
  "source": "pragma experimental ABIEncoderV2;\npragma solidity >=0.4.21 <0.6.0;\n\ncontract LuckyWinner {\n    mapping(address => User) public enrolledUsers;\n    mapping(address => uint256) public balanceOf;\n    User[] public users;\n    uint256 public totalEnrolleFees = 0;\n    uint256 totalUsers;\n    uint256 public enrollFee = 1 ether;\n    // address adminAddress;\n    address payable public winnerAddress;\n\n    // constructor() public {\n    //     adminAddress = msg.sender;\n    // }\n\n    struct User {\n        address payable userAddress;\n        bool enrolled;\n        string name;\n        string email;\n        string phone;\n    }\n\n    function enrollUser(User memory user)\n        public\n        payable\n        returns (User[] memory)\n    {\n        // TODO put condition to check if already enrolled\n        require(msg.value == enrollFee);\n        totalEnrolleFees += enrollFee;\n        users.push(\n            User({\n                userAddress: msg.sender,\n                name: user.name,\n                email: user.email,\n                phone: user.phone,\n                enrolled: true\n            })\n        );\n        // balanceOf[msg.sender] += enrollFee;\n        enrolledUsers[msg.sender] = User({\n                userAddress: msg.sender,\n                name: user.name,\n                email: user.email,\n                phone: user.phone,\n                enrolled: true\n            });\n        return users;\n    }\n\n    //    function random() private view returns (uint256) {\n    //                 return uint(keccak256(abi.encodePacked(block.difficulty, block.timestamp, users)));\n\n    //             // return uint256(keccak256(abi.encodePacked(block.timestamp, block.difficulty)));\n\n    //     }\n\n    function getEnrolledData()\n        public\n        returns (\n            User[] memory,\n            uint256,\n            uint256\n        )\n    {\n        return (users, totalEnrolleFees, totalUsers);\n    }\n\n    function announceRandomWinner()\n        public\n        returns (\n            address,\n            uint256,\n            uint256\n        )\n    {\n        uint256 index = 0;\n        // uint256 index = random() % users.length;\n        winnerAddress = users[index].userAddress;\n        uint256 contractBalance = address(this).balance;\n\n        address payable receiver = winnerAddress;\n\n        receiver.transfer(contractBalance);\n        // address(winnerAddress).transfer(address(this).balance);\n        // User memory winner = users[randomNumber - 1];\n        // address winnerAddress = winner.userAddress;\n        totalEnrolleFees = 0;\n        return (receiver, totalEnrolleFees, contractBalance);\n    }\n}\n",
  "sourcePath": "/Users/deepak/Desktop/Code/ai/lucky-winner/src/contracts/LuckyWinner.sol",
  "ast": {
    "absolutePath": "/Users/deepak/Desktop/Code/ai/lucky-winner/src/contracts/LuckyWinner.sol",
    "exportedSymbols": {
      "LuckyWinner": [
        153
      ]
    },
    "id": 154,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:33:0"
      },
      {
        "id": 2,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "34:32:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 153,
        "linearizedBaseContracts": [
          153
        ],
        "name": "LuckyWinner",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6,
            "name": "enrolledUsers",
            "nodeType": "VariableDeclaration",
            "scope": 153,
            "src": "95:45:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$34_storage_$",
              "typeString": "mapping(address => struct LuckyWinner.User)"
            },
            "typeName": {
              "id": 5,
              "keyType": {
                "id": 3,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "103:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "95:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$34_storage_$",
                "typeString": "mapping(address => struct LuckyWinner.User)"
              },
              "valueType": {
                "contractScope": null,
                "id": 4,
                "name": "User",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 34,
                "src": "114:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_User_$34_storage_ptr",
                  "typeString": "struct LuckyWinner.User"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 10,
            "name": "balanceOf",
            "nodeType": "VariableDeclaration",
            "scope": 153,
            "src": "146:44:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 9,
              "keyType": {
                "id": 7,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "154:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "146:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 8,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "165:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 13,
            "name": "users",
            "nodeType": "VariableDeclaration",
            "scope": 153,
            "src": "196:19:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_User_$34_storage_$dyn_storage",
              "typeString": "struct LuckyWinner.User[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 11,
                "name": "User",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 34,
                "src": "196:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_User_$34_storage_ptr",
                  "typeString": "struct LuckyWinner.User"
                }
              },
              "id": 12,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "196:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_User_$34_storage_$dyn_storage_ptr",
                "typeString": "struct LuckyWinner.User[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 16,
            "name": "totalEnrolleFees",
            "nodeType": "VariableDeclaration",
            "scope": 153,
            "src": "221:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "221:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 15,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "255:1:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 18,
            "name": "totalUsers",
            "nodeType": "VariableDeclaration",
            "scope": 153,
            "src": "262:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 17,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "262:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 21,
            "name": "enrollFee",
            "nodeType": "VariableDeclaration",
            "scope": 153,
            "src": "286:34:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 19,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "286:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 20,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "313:7:0",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 23,
            "name": "winnerAddress",
            "nodeType": "VariableDeclaration",
            "scope": 153,
            "src": "355:36:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 22,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "355:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "LuckyWinner.User",
            "id": 34,
            "members": [
              {
                "constant": false,
                "id": 25,
                "name": "userAddress",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "498:27:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 24,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "498:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 27,
                "name": "enrolled",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "535:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 26,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "535:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 29,
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "558:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 28,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "558:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 31,
                "name": "email",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "579:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 30,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "579:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 33,
                "name": "phone",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "601:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 32,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "601:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "User",
            "nodeType": "StructDefinition",
            "scope": 153,
            "src": "476:144:0",
            "visibility": "public"
          },
          {
            "body": {
              "id": 88,
              "nodeType": "Block",
              "src": "731:689:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 46,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 43,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 225,
                            "src": "808:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 44,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "808:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 45,
                          "name": "enrollFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21,
                          "src": "821:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "808:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 42,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        228,
                        229
                      ],
                      "referencedDeclaration": 228,
                      "src": "800:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "800:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48,
                  "nodeType": "ExpressionStatement",
                  "src": "800:31:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 51,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 49,
                      "name": "totalEnrolleFees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "841:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 50,
                      "name": "enrollFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "861:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "841:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 52,
                  "nodeType": "ExpressionStatement",
                  "src": "841:29:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 57,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 225,
                              "src": "940:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 58,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "940:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 59,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36,
                              "src": "974:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$34_memory_ptr",
                                "typeString": "struct LuckyWinner.User memory"
                              }
                            },
                            "id": 60,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "name",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29,
                            "src": "974:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 61,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36,
                              "src": "1008:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$34_memory_ptr",
                                "typeString": "struct LuckyWinner.User memory"
                              }
                            },
                            "id": 62,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "email",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31,
                            "src": "1008:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 63,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36,
                              "src": "1043:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$34_memory_ptr",
                                "typeString": "struct LuckyWinner.User memory"
                              }
                            },
                            "id": 64,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "phone",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 33,
                            "src": "1043:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 65,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1081:4:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_string_memory",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 56,
                          "name": "User",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "904:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_User_$34_storage_ptr_$",
                            "typeString": "type(struct LuckyWinner.User storage pointer)"
                          }
                        },
                        "id": 66,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "userAddress",
                          "name",
                          "email",
                          "phone",
                          "enrolled"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "904:196:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$34_memory",
                          "typeString": "struct LuckyWinner.User memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$34_memory",
                          "typeString": "struct LuckyWinner.User memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 53,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "880:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_User_$34_storage_$dyn_storage",
                          "typeString": "struct LuckyWinner.User storage ref[] storage ref"
                        }
                      },
                      "id": 55,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "880:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_User_$34_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct LuckyWinner.User storage ref) returns (uint256)"
                      }
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "880:230:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "880:230:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 69,
                        "name": "enrolledUsers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "1167:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$34_storage_$",
                          "typeString": "mapping(address => struct LuckyWinner.User storage ref)"
                        }
                      },
                      "id": 72,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 70,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 225,
                          "src": "1181:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1181:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1167:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$34_storage",
                        "typeString": "struct LuckyWinner.User storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 74,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 225,
                            "src": "1231:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 75,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1231:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 76,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "1265:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$34_memory_ptr",
                              "typeString": "struct LuckyWinner.User memory"
                            }
                          },
                          "id": 77,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "name",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29,
                          "src": "1265:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 78,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "1299:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$34_memory_ptr",
                              "typeString": "struct LuckyWinner.User memory"
                            }
                          },
                          "id": 79,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "email",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31,
                          "src": "1299:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 80,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "1334:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$34_memory_ptr",
                              "typeString": "struct LuckyWinner.User memory"
                            }
                          },
                          "id": 81,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "phone",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33,
                          "src": "1334:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 82,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1372:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 73,
                        "name": "User",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "1195:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_User_$34_storage_ptr_$",
                          "typeString": "type(struct LuckyWinner.User storage pointer)"
                        }
                      },
                      "id": 83,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "userAddress",
                        "name",
                        "email",
                        "phone",
                        "enrolled"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1195:196:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$34_memory",
                        "typeString": "struct LuckyWinner.User memory"
                      }
                    },
                    "src": "1167:224:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$34_storage",
                      "typeString": "struct LuckyWinner.User storage ref"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "1167:224:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 86,
                    "name": "users",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13,
                    "src": "1408:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_User_$34_storage_$dyn_storage",
                      "typeString": "struct LuckyWinner.User storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 41,
                  "id": 87,
                  "nodeType": "Return",
                  "src": "1401:12:0"
                }
              ]
            },
            "documentation": null,
            "id": 89,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "enrollUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36,
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "646:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_User_$34_memory_ptr",
                    "typeString": "struct LuckyWinner.User"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 35,
                    "name": "User",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 34,
                    "src": "646:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$34_storage_ptr",
                      "typeString": "struct LuckyWinner.User"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "645:18:0"
            },
            "returnParameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "712:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_User_$34_memory_$dyn_memory_ptr",
                    "typeString": "struct LuckyWinner.User[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 38,
                      "name": "User",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 34,
                      "src": "712:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$34_storage_ptr",
                        "typeString": "struct LuckyWinner.User"
                      }
                    },
                    "id": 39,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "712:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_User_$34_storage_$dyn_storage_ptr",
                      "typeString": "struct LuckyWinner.User[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "711:15:0"
            },
            "scope": 153,
            "src": "626:794:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 104,
              "nodeType": "Block",
              "src": "1854:61:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 99,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "1872:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_User_$34_storage_$dyn_storage",
                          "typeString": "struct LuckyWinner.User storage ref[] storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 100,
                        "name": "totalEnrolleFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "1879:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 101,
                        "name": "totalUsers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "1897:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 102,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1871:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_struct$_User_$34_storage_$dyn_storage_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(struct LuckyWinner.User storage ref[] storage ref,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 98,
                  "id": 103,
                  "nodeType": "Return",
                  "src": "1864:44:0"
                }
              ]
            },
            "documentation": null,
            "id": 105,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEnrolledData",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1736:2:0"
            },
            "returnParameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 93,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "1784:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_User_$34_memory_$dyn_memory_ptr",
                    "typeString": "struct LuckyWinner.User[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 91,
                      "name": "User",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 34,
                      "src": "1784:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$34_storage_ptr",
                        "typeString": "struct LuckyWinner.User"
                      }
                    },
                    "id": 92,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1784:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_User_$34_storage_$dyn_storage_ptr",
                      "typeString": "struct LuckyWinner.User[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 95,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "1811:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1811:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 97,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "1832:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1832:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1770:79:0"
            },
            "scope": 153,
            "src": "1712:203:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 151,
              "nodeType": "Block",
              "src": "2062:560:0",
              "statements": [
                {
                  "assignments": [
                    115
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 115,
                      "name": "index",
                      "nodeType": "VariableDeclaration",
                      "scope": 151,
                      "src": "2072:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 114,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2072:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 117,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2088:1:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2072:17:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 118,
                      "name": "winnerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "2151:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 119,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "2167:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_User_$34_storage_$dyn_storage",
                            "typeString": "struct LuckyWinner.User storage ref[] storage ref"
                          }
                        },
                        "id": 121,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 120,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 115,
                          "src": "2173:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2167:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$34_storage",
                          "typeString": "struct LuckyWinner.User storage ref"
                        }
                      },
                      "id": 122,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25,
                      "src": "2167:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2151:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "2151:40:0"
                },
                {
                  "assignments": [
                    126
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 126,
                      "name": "contractBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 151,
                      "src": "2201:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 125,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2201:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 131,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 128,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 239,
                          "src": "2235:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LuckyWinner_$153",
                            "typeString": "contract LuckyWinner"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_LuckyWinner_$153",
                            "typeString": "contract LuckyWinner"
                          }
                        ],
                        "id": 127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2227:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2227:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "2227:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2201:47:0"
                },
                {
                  "assignments": [
                    133
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 133,
                      "name": "receiver",
                      "nodeType": "VariableDeclaration",
                      "scope": 151,
                      "src": "2259:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 132,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2259:15:0",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 135,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 134,
                    "name": "winnerAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 23,
                    "src": "2286:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2259:40:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 139,
                        "name": "contractBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 126,
                        "src": "2328:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 136,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 133,
                        "src": "2310:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 138,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2310:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2310:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 141,
                  "nodeType": "ExpressionStatement",
                  "src": "2310:34:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 142,
                      "name": "totalEnrolleFees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "2533:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2552:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2533:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 145,
                  "nodeType": "ExpressionStatement",
                  "src": "2533:20:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 146,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 133,
                        "src": "2571:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 147,
                        "name": "totalEnrolleFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "2581:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 148,
                        "name": "contractBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 126,
                        "src": "2599:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 149,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2570:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_payable_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(address payable,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 113,
                  "id": 150,
                  "nodeType": "Return",
                  "src": "2563:52:0"
                }
              ]
            },
            "documentation": null,
            "id": 152,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "announceRandomWinner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1950:2:0"
            },
            "returnParameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 108,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "1998:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 107,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1998:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 110,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "2019:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 109,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2019:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 112,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "2040:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 111,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2040:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1984:73:0"
            },
            "scope": 153,
            "src": "1921:701:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 154,
        "src": "68:2556:0"
      }
    ],
    "src": "0:2625:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/deepak/Desktop/Code/ai/lucky-winner/src/contracts/LuckyWinner.sol",
    "exportedSymbols": {
      "LuckyWinner": [
        153
      ]
    },
    "id": 154,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:33:0"
      },
      {
        "id": 2,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "34:32:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 153,
        "linearizedBaseContracts": [
          153
        ],
        "name": "LuckyWinner",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6,
            "name": "enrolledUsers",
            "nodeType": "VariableDeclaration",
            "scope": 153,
            "src": "95:45:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$34_storage_$",
              "typeString": "mapping(address => struct LuckyWinner.User)"
            },
            "typeName": {
              "id": 5,
              "keyType": {
                "id": 3,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "103:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "95:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$34_storage_$",
                "typeString": "mapping(address => struct LuckyWinner.User)"
              },
              "valueType": {
                "contractScope": null,
                "id": 4,
                "name": "User",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 34,
                "src": "114:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_User_$34_storage_ptr",
                  "typeString": "struct LuckyWinner.User"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 10,
            "name": "balanceOf",
            "nodeType": "VariableDeclaration",
            "scope": 153,
            "src": "146:44:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 9,
              "keyType": {
                "id": 7,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "154:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "146:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 8,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "165:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 13,
            "name": "users",
            "nodeType": "VariableDeclaration",
            "scope": 153,
            "src": "196:19:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_User_$34_storage_$dyn_storage",
              "typeString": "struct LuckyWinner.User[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 11,
                "name": "User",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 34,
                "src": "196:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_User_$34_storage_ptr",
                  "typeString": "struct LuckyWinner.User"
                }
              },
              "id": 12,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "196:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_User_$34_storage_$dyn_storage_ptr",
                "typeString": "struct LuckyWinner.User[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 16,
            "name": "totalEnrolleFees",
            "nodeType": "VariableDeclaration",
            "scope": 153,
            "src": "221:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "221:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 15,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "255:1:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 18,
            "name": "totalUsers",
            "nodeType": "VariableDeclaration",
            "scope": 153,
            "src": "262:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 17,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "262:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 21,
            "name": "enrollFee",
            "nodeType": "VariableDeclaration",
            "scope": 153,
            "src": "286:34:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 19,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "286:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 20,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "313:7:0",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 23,
            "name": "winnerAddress",
            "nodeType": "VariableDeclaration",
            "scope": 153,
            "src": "355:36:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 22,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "355:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "LuckyWinner.User",
            "id": 34,
            "members": [
              {
                "constant": false,
                "id": 25,
                "name": "userAddress",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "498:27:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 24,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "498:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 27,
                "name": "enrolled",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "535:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 26,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "535:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 29,
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "558:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 28,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "558:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 31,
                "name": "email",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "579:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 30,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "579:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 33,
                "name": "phone",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "601:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 32,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "601:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "User",
            "nodeType": "StructDefinition",
            "scope": 153,
            "src": "476:144:0",
            "visibility": "public"
          },
          {
            "body": {
              "id": 88,
              "nodeType": "Block",
              "src": "731:689:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 46,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 43,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 225,
                            "src": "808:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 44,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "808:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 45,
                          "name": "enrollFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21,
                          "src": "821:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "808:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 42,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        228,
                        229
                      ],
                      "referencedDeclaration": 228,
                      "src": "800:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "800:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48,
                  "nodeType": "ExpressionStatement",
                  "src": "800:31:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 51,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 49,
                      "name": "totalEnrolleFees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "841:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 50,
                      "name": "enrollFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "861:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "841:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 52,
                  "nodeType": "ExpressionStatement",
                  "src": "841:29:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 57,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 225,
                              "src": "940:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 58,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "940:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 59,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36,
                              "src": "974:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$34_memory_ptr",
                                "typeString": "struct LuckyWinner.User memory"
                              }
                            },
                            "id": 60,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "name",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29,
                            "src": "974:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 61,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36,
                              "src": "1008:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$34_memory_ptr",
                                "typeString": "struct LuckyWinner.User memory"
                              }
                            },
                            "id": 62,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "email",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31,
                            "src": "1008:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 63,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36,
                              "src": "1043:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$34_memory_ptr",
                                "typeString": "struct LuckyWinner.User memory"
                              }
                            },
                            "id": 64,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "phone",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 33,
                            "src": "1043:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 65,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1081:4:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_string_memory",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 56,
                          "name": "User",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "904:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_User_$34_storage_ptr_$",
                            "typeString": "type(struct LuckyWinner.User storage pointer)"
                          }
                        },
                        "id": 66,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "userAddress",
                          "name",
                          "email",
                          "phone",
                          "enrolled"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "904:196:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$34_memory",
                          "typeString": "struct LuckyWinner.User memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$34_memory",
                          "typeString": "struct LuckyWinner.User memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 53,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "880:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_User_$34_storage_$dyn_storage",
                          "typeString": "struct LuckyWinner.User storage ref[] storage ref"
                        }
                      },
                      "id": 55,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "880:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_User_$34_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct LuckyWinner.User storage ref) returns (uint256)"
                      }
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "880:230:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "880:230:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 69,
                        "name": "enrolledUsers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "1167:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$34_storage_$",
                          "typeString": "mapping(address => struct LuckyWinner.User storage ref)"
                        }
                      },
                      "id": 72,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 70,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 225,
                          "src": "1181:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1181:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1167:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$34_storage",
                        "typeString": "struct LuckyWinner.User storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 74,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 225,
                            "src": "1231:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 75,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1231:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 76,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "1265:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$34_memory_ptr",
                              "typeString": "struct LuckyWinner.User memory"
                            }
                          },
                          "id": 77,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "name",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29,
                          "src": "1265:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 78,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "1299:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$34_memory_ptr",
                              "typeString": "struct LuckyWinner.User memory"
                            }
                          },
                          "id": 79,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "email",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31,
                          "src": "1299:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 80,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "1334:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$34_memory_ptr",
                              "typeString": "struct LuckyWinner.User memory"
                            }
                          },
                          "id": 81,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "phone",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33,
                          "src": "1334:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 82,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1372:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 73,
                        "name": "User",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "1195:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_User_$34_storage_ptr_$",
                          "typeString": "type(struct LuckyWinner.User storage pointer)"
                        }
                      },
                      "id": 83,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "userAddress",
                        "name",
                        "email",
                        "phone",
                        "enrolled"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1195:196:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$34_memory",
                        "typeString": "struct LuckyWinner.User memory"
                      }
                    },
                    "src": "1167:224:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$34_storage",
                      "typeString": "struct LuckyWinner.User storage ref"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "1167:224:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 86,
                    "name": "users",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13,
                    "src": "1408:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_User_$34_storage_$dyn_storage",
                      "typeString": "struct LuckyWinner.User storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 41,
                  "id": 87,
                  "nodeType": "Return",
                  "src": "1401:12:0"
                }
              ]
            },
            "documentation": null,
            "id": 89,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "enrollUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36,
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "646:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_User_$34_memory_ptr",
                    "typeString": "struct LuckyWinner.User"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 35,
                    "name": "User",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 34,
                    "src": "646:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$34_storage_ptr",
                      "typeString": "struct LuckyWinner.User"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "645:18:0"
            },
            "returnParameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "712:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_User_$34_memory_$dyn_memory_ptr",
                    "typeString": "struct LuckyWinner.User[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 38,
                      "name": "User",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 34,
                      "src": "712:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$34_storage_ptr",
                        "typeString": "struct LuckyWinner.User"
                      }
                    },
                    "id": 39,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "712:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_User_$34_storage_$dyn_storage_ptr",
                      "typeString": "struct LuckyWinner.User[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "711:15:0"
            },
            "scope": 153,
            "src": "626:794:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 104,
              "nodeType": "Block",
              "src": "1854:61:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 99,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "1872:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_User_$34_storage_$dyn_storage",
                          "typeString": "struct LuckyWinner.User storage ref[] storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 100,
                        "name": "totalEnrolleFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "1879:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 101,
                        "name": "totalUsers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "1897:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 102,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1871:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_struct$_User_$34_storage_$dyn_storage_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(struct LuckyWinner.User storage ref[] storage ref,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 98,
                  "id": 103,
                  "nodeType": "Return",
                  "src": "1864:44:0"
                }
              ]
            },
            "documentation": null,
            "id": 105,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEnrolledData",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1736:2:0"
            },
            "returnParameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 93,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "1784:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_User_$34_memory_$dyn_memory_ptr",
                    "typeString": "struct LuckyWinner.User[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 91,
                      "name": "User",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 34,
                      "src": "1784:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$34_storage_ptr",
                        "typeString": "struct LuckyWinner.User"
                      }
                    },
                    "id": 92,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1784:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_User_$34_storage_$dyn_storage_ptr",
                      "typeString": "struct LuckyWinner.User[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 95,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "1811:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1811:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 97,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "1832:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1832:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1770:79:0"
            },
            "scope": 153,
            "src": "1712:203:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 151,
              "nodeType": "Block",
              "src": "2062:560:0",
              "statements": [
                {
                  "assignments": [
                    115
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 115,
                      "name": "index",
                      "nodeType": "VariableDeclaration",
                      "scope": 151,
                      "src": "2072:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 114,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2072:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 117,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2088:1:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2072:17:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 118,
                      "name": "winnerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "2151:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 119,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "2167:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_User_$34_storage_$dyn_storage",
                            "typeString": "struct LuckyWinner.User storage ref[] storage ref"
                          }
                        },
                        "id": 121,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 120,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 115,
                          "src": "2173:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2167:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$34_storage",
                          "typeString": "struct LuckyWinner.User storage ref"
                        }
                      },
                      "id": 122,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25,
                      "src": "2167:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2151:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "2151:40:0"
                },
                {
                  "assignments": [
                    126
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 126,
                      "name": "contractBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 151,
                      "src": "2201:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 125,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2201:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 131,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 128,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 239,
                          "src": "2235:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LuckyWinner_$153",
                            "typeString": "contract LuckyWinner"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_LuckyWinner_$153",
                            "typeString": "contract LuckyWinner"
                          }
                        ],
                        "id": 127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2227:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2227:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "2227:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2201:47:0"
                },
                {
                  "assignments": [
                    133
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 133,
                      "name": "receiver",
                      "nodeType": "VariableDeclaration",
                      "scope": 151,
                      "src": "2259:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 132,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2259:15:0",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 135,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 134,
                    "name": "winnerAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 23,
                    "src": "2286:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2259:40:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 139,
                        "name": "contractBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 126,
                        "src": "2328:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 136,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 133,
                        "src": "2310:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 138,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2310:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2310:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 141,
                  "nodeType": "ExpressionStatement",
                  "src": "2310:34:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 142,
                      "name": "totalEnrolleFees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "2533:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2552:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2533:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 145,
                  "nodeType": "ExpressionStatement",
                  "src": "2533:20:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 146,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 133,
                        "src": "2571:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 147,
                        "name": "totalEnrolleFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "2581:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 148,
                        "name": "contractBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 126,
                        "src": "2599:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 149,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2570:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_payable_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(address payable,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 113,
                  "id": 150,
                  "nodeType": "Return",
                  "src": "2563:52:0"
                }
              ]
            },
            "documentation": null,
            "id": 152,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "announceRandomWinner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1950:2:0"
            },
            "returnParameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 108,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "1998:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 107,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1998:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 110,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "2019:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 109,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2019:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 112,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "2040:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 111,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2040:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1984:73:0"
            },
            "scope": 153,
            "src": "1921:701:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 154,
        "src": "68:2556:0"
      }
    ],
    "src": "0:2625:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x84ED9BF0a2C5f3da3a55A9d2A783685bB520f3aB",
      "transactionHash": "0xb14994d6be20a3b2e837efb208f10dcb858ea01d54d2cfc66c091fc60fc79b4c"
    }
  },
  "schemaVersion": "3.0.23",
  "updatedAt": "2022-02-17T04:24:33.630Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}